{"version":3,"sources":["views/js/main.js"],"names":["getAdj","x","dark","colors","whimsy","shiny","noisy","apocalyptic","insulting","praise","scientific","scientific_default","getNoun","y","animals","professions","fantasy","music","horror","gross","everyday","jewelry","places","scifi","scifi_default","generator","adj","noun","adjectives","nouns","randomAdjective","parseInt","Math","random","length","randomNoun","name","capitalize","randomName","randomNumberAdj","randomNumberNoun","logAverageFrame","times","numberOfEntries","sum","i","duration","console","log","updatePositions","frame","window","performance","mark","items","document","querySelectorAll","$scroll_ratio","body","scrollTop","phase","sin","style","left","basicLeft","measure","timesToUpdatePosition","getEntriesByName","pizzaIngredients","meats","nonMeats","cheeses","sauces","crusts","String","prototype","this","charAt","toUpperCase","slice","selectRandomMeat","randomMeat","floor","selectRandomNonMeat","randomNonMeat","selectRandomCheese","randomCheese","selectRandomSauce","randomSauce","selectRandomCrust","randomCrust","ingredientItemizer","string","makeRandomPizza","pizza","numberOfMeats","numberOfNonMeats","numberOfCheeses","j","k","pizzaElementGenerator","pizzaContainer","pizzaImageContainer","pizzaImage","pizzaDescriptionContainer","pizzaName","ul","createElement","classList","add","width","height","id","src","appendChild","innerHTML","resizePizzas","size","changeSliderLabel","pizzaSizeLabel","changePizzaSizes","pizzas","container_width","querySelector","offsetWidth","elem_new_width","getElementById","timeToResize","pizzasDiv","timeToGenerate","_now","Date","now","getTime","_throttle","func","wait","options","timeout","context","args","result","previous","later","leading","apply","throttled","remaining","arguments","clearTimeout","trailing","setTimeout","cancel","throttledUpdatePositions","addEventListener","cols","s","elem","className","top"],"mappings":"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UACA,iBACA,gBACA,UACA,cACA,UACA,oBACA,SACA,OACA,QACA,iBACA,aACA,kBACA,cACA,YACA,SACA,MACA,UACA,OACA,OACA,gBACA,cACA,sBACA,QACA,WACA,UACA,MACA,YACA,QACA,aACA,WACA,WACA,WACA,gBAEJD,iBAAiBE,UACb,eACA,aACA,iBACA,gBACA,cACA,iBACA,gBACA,mBACA,mBACA,kBACA,UACA,WACA,YACA,cACA,eACA,YACA,UACA,QACA,SACA,WACA,WACA,UACA,YACA,QACA,cACA,OACA,qBACA,UACA,YACA,YACA,qBACA,QACA,SACA,SACA,cACA,UACA,YACA,WACA,UAEJF,iBAAiBG,SACb,kBACA,eACA,cACA,oBACA,mBACA,kBACA,eACA,kBACA,mBACA,gBACA,cACA,iBACA,cACA,iBACA,gBACA,iBACA,cACA,qBACA,iBACA,mBACA,kBACA,oBACA,kBACA,mBACA,eACA,mBACA,gBACA,iBACA,gBAEJH,iBAAiBI,QACb,YACA,WACA,YACA,WACA,aAEJJ,iBAAiBK,QACb,cACA,oBACA,kBACA,iBAKJC,OAAOC,UAAUtC,WAAa,WAC1B,MAAOuC,MAAKC,OAAO,GAAGC,cAAgBF,KAAKG,MAAM,GAyIrD,IAAInD,aAAc,OAAQ,QAAS,YAAa,QAAS,QAAS,cAAe,YAAa,SAAU,cACpGC,OAAS,UAAW,WAAY,UAAW,QAAS,SAAU,UAAW,SAAU,SAoBnFmD,iBAAmB,WACnB,GAAIC,GAAab,iBAAiBC,MAAMrC,KAAKkD,MAAOlD,KAAKC,SAAWmC,iBAAiBC,MAAMnC,QAC3F,OAAO+C,IAGPE,oBAAsB,WACtB,GAAIC,GAAgBhB,iBAAiBE,SAAStC,KAAKkD,MAAOlD,KAAKC,SAAWmC,iBAAiBE,SAASpC,QACpG,OAAOkD,IAGPC,mBAAqB,WACrB,GAAIC,GAAelB,iBAAiBG,QAAQvC,KAAKkD,MAAOlD,KAAKC,SAAWmC,iBAAiBG,QAAQrC,QACjG,OAAOoD,IAGPC,kBAAoB,WACpB,GAAIC,GAAcpB,iBAAiBI,OAAOxC,KAAKkD,MAAOlD,KAAK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","file":"views/js/main.js","sourcesContent":["\"use strict\";\n\n/*\n Welcome to the 60fps project! Your goal is to make Cam's Pizzeria website run\n jank-free at 60 frames per second.\n\n There are two major issues in this code that lead to sub-60fps performance. Can\n you spot and fix both?\n\n\n Built into the code, you'll find a few instances of the User Timing API\n (window.performance), which will be console.log()ing frame rate data into the\n browser console. To learn more about User Timing API, check out:\n http://www.html5rocks.com/en/tutorials/webperformance/usertiming/\n\n Creator:\n Cameron Pittman, Udacity Course Developer\n cameron *at* udacity *dot* com\n */\n\n// As you may have realized, this website randomly generates pizzas.\n// Here are arrays of all possible pizza ingredients.\nvar pizzaIngredients = {};\npizzaIngredients.meats = [\n    \"Pepperoni\",\n    \"Sausage\",\n    \"Fennel Sausage\",\n    \"Spicy Sausage\",\n    \"Chicken\",\n    \"BBQ Chicken\",\n    \"Chorizo\",\n    \"Chicken Andouille\",\n    \"Salami\",\n    \"Tofu\",\n    \"Bacon\",\n    \"Canadian Bacon\",\n    \"Proscuitto\",\n    \"Italian Sausage\",\n    \"Ground Beef\",\n    \"Anchovies\",\n    \"Turkey\",\n    \"Ham\",\n    \"Venison\",\n    \"Lamb\",\n    \"Duck\",\n    \"Soylent Green\",\n    \"Carne Asada\",\n    \"Soppressata Picante\",\n    \"Coppa\",\n    \"Pancetta\",\n    \"Bresola\",\n    \"Lox\",\n    \"Guanciale\",\n    \"Chili\",\n    \"Beef Jerky\",\n    \"Pastrami\",\n    \"Kielbasa\",\n    \"Scallops\",\n    \"Filet Mignon\"\n];\npizzaIngredients.nonMeats = [\n    \"White Onions\",\n    \"Red Onions\",\n    \"Sauteed Onions\",\n    \"Green Peppers\",\n    \"Red Peppers\",\n    \"Banana Peppers\",\n    \"Ghost Peppers\",\n    \"Habanero Peppers\",\n    \"Jalapeno Peppers\",\n    \"Stuffed Peppers\",\n    \"Spinach\",\n    \"Tomatoes\",\n    \"Pineapple\",\n    \"Pear Slices\",\n    \"Apple Slices\",\n    \"Mushrooms\",\n    \"Arugula\",\n    \"Basil\",\n    \"Fennel\",\n    \"Rosemary\",\n    \"Cilantro\",\n    \"Avocado\",\n    \"Guacamole\",\n    \"Salsa\",\n    \"Swiss Chard\",\n    \"Kale\",\n    \"Sun Dried Tomatoes\",\n    \"Walnuts\",\n    \"Artichoke\",\n    \"Asparagus\",\n    \"Caramelized Onions\",\n    \"Mango\",\n    \"Garlic\",\n    \"Olives\",\n    \"Cauliflower\",\n    \"Polenta\",\n    \"Fried Egg\",\n    \"Zucchini\",\n    \"Hummus\"\n];\npizzaIngredients.cheeses = [\n    \"American Cheese\",\n    \"Swiss Cheese\",\n    \"Goat Cheese\",\n    \"Mozzarella Cheese\",\n    \"Parmesean Cheese\",\n    \"Velveeta Cheese\",\n    \"Gouda Cheese\",\n    \"Muenster Cheese\",\n    \"Applewood Cheese\",\n    \"Asiago Cheese\",\n    \"Bleu Cheese\",\n    \"Boursin Cheese\",\n    \"Brie Cheese\",\n    \"Cheddar Cheese\",\n    \"Chevre Cheese\",\n    \"Havarti Cheese\",\n    \"Jack Cheese\",\n    \"Pepper Jack Cheese\",\n    \"Gruyere Cheese\",\n    \"Limberger Cheese\",\n    \"Manchego Cheese\",\n    \"Marscapone Cheese\",\n    \"Pecorino Cheese\",\n    \"Provolone Cheese\",\n    \"Queso Cheese\",\n    \"Roquefort Cheese\",\n    \"Romano Cheese\",\n    \"Ricotta Cheese\",\n    \"Smoked Gouda\"\n];\npizzaIngredients.sauces = [\n    \"Red Sauce\",\n    \"Marinara\",\n    \"BBQ Sauce\",\n    \"No Sauce\",\n    \"Hot Sauce\"\n];\npizzaIngredients.crusts = [\n    \"White Crust\",\n    \"Whole Wheat Crust\",\n    \"Flatbread Crust\",\n    \"Stuffed Crust\"\n];\n\n// Name generator pulled from http://saturdaykid.com/usernames/generator.html\n// Capitalizes first letter of each word\nString.prototype.capitalize = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\n// Pulls adjective out of array using random number sent from generator\nfunction getAdj(x) {\n    switch (x) {\n        case \"dark\":\n            var dark = [\"dark\", \"morbid\", \"scary\", \"spooky\", \"gothic\", \"deviant\", \"creepy\", \"sadistic\", \"black\", \"dangerous\", \"dejected\", \"haunted\",\n                \"morose\", \"tragic\", \"shattered\", \"broken\", \"sad\", \"melancholy\", \"somber\", \"dark\", \"gloomy\", \"homicidal\", \"murderous\", \"shady\", \"misty\",\n                \"dusky\", \"ghostly\", \"shadowy\", \"demented\", \"cursed\", \"insane\", \"possessed\", \"grotesque\", \"obsessed\"];\n            return dark;\n        case \"color\":\n            var colors = [\"blue\", \"green\", \"purple\", \"grey\", \"scarlet\", \"NeonGreen\", \"NeonBlue\", \"NeonPink\", \"HotPink\", \"pink\", \"black\", \"red\",\n                \"maroon\", \"silver\", \"golden\", \"yellow\", \"orange\", \"mustard\", \"plum\", \"violet\", \"cerulean\", \"brown\", \"lavender\", \"violet\", \"magenta\",\n                \"chestnut\", \"rosy\", \"copper\", \"crimson\", \"teal\", \"indigo\", \"navy\", \"azure\", \"periwinkle\", \"brassy\", \"verdigris\", \"veridian\", \"tan\",\n                \"raspberry\", \"beige\", \"sandy\", \"ElectricBlue\", \"white\", \"champagne\", \"coral\", \"cyan\"];\n            return colors;\n        case \"whimsical\":\n            var whimsy = [\"whimsical\", \"silly\", \"drunken\", \"goofy\", \"funny\", \"weird\", \"strange\", \"odd\", \"playful\", \"clever\", \"boastful\", \"breakdancing\",\n                \"hilarious\", \"conceited\", \"happy\", \"comical\", \"curious\", \"peculiar\", \"quaint\", \"quirky\", \"fancy\", \"wayward\", \"fickle\", \"yawning\", \"sleepy\",\n                \"cockeyed\", \"dizzy\", \"dancing\", \"absurd\", \"laughing\", \"hairy\", \"smiling\", \"perplexed\", \"baffled\", \"cockamamie\", \"vulgar\", \"hoodwinked\",\n                \"brainwashed\"];\n            return whimsy;\n        case \"shiny\":\n            var shiny = [\"sapphire\", \"opal\", \"silver\", \"gold\", \"platinum\", \"ruby\", \"emerald\", \"topaz\", \"diamond\", \"amethyst\", \"turquoise\",\n                \"starlit\", \"moonlit\", \"bronze\", \"metal\", \"jade\", \"amber\", \"garnet\", \"obsidian\", \"onyx\", \"pearl\", \"copper\", \"sunlit\", \"brass\", \"brassy\",\n                \"metallic\"];\n            return shiny;\n        case \"noisy\":\n            var noisy = [\"untuned\", \"loud\", \"soft\", \"shrieking\", \"melodious\", \"musical\", \"operatic\", \"symphonic\", \"dancing\", \"lyrical\", \"harmonic\",\n                \"orchestral\", \"noisy\", \"dissonant\", \"rhythmic\", \"hissing\", \"singing\", \"crooning\", \"shouting\", \"screaming\", \"wailing\", \"crying\", \"howling\",\n                \"yelling\", \"hollering\", \"caterwauling\", \"bawling\", \"bellowing\", \"roaring\", \"squealing\", \"beeping\", \"knocking\", \"tapping\", \"rapping\",\n                \"humming\", \"scatting\", \"whispered\", \"whispering\", \"rasping\", \"buzzing\", \"whirring\", \"whistling\", \"whistled\"];\n            return noisy;\n        case \"apocalyptic\":\n            var apocalyptic = [\"nuclear\", \"apocalyptic\", \"desolate\", \"atomic\", \"zombie\", \"collapsed\", \"grim\", \"fallen\", \"collapsed\", \"cannibalistic\",\n                \"radioactive\", \"toxic\", \"poisonous\", \"venomous\", \"disastrous\", \"grimy\", \"dirty\", \"undead\", \"bloodshot\", \"rusty\", \"glowing\", \"decaying\",\n                \"rotten\", \"deadly\", \"plagued\", \"decimated\", \"rotting\", \"putrid\", \"decayed\", \"deserted\", \"acidic\"];\n            return apocalyptic;\n        case \"insulting\":\n            var insulting = [\"stupid\", \"idiotic\", \"fat\", \"ugly\", \"hideous\", \"grotesque\", \"dull\", \"dumb\", \"lazy\", \"sluggish\", \"brainless\", \"slow\",\n                \"gullible\", \"obtuse\", \"dense\", \"dim\", \"dazed\", \"ridiculous\", \"witless\", \"daft\", \"crazy\", \"vapid\", \"inane\", \"mundane\", \"hollow\", \"vacuous\",\n                \"boring\", \"insipid\", \"tedious\", \"monotonous\", \"weird\", \"bizarre\", \"backward\", \"moronic\", \"ignorant\", \"scatterbrained\", \"forgetful\", \"careless\",\n                \"lethargic\", \"insolent\", \"indolent\", \"loitering\", \"gross\", \"disgusting\", \"bland\", \"horrid\", \"unseemly\", \"revolting\", \"homely\", \"deformed\",\n                \"disfigured\", \"offensive\", \"cowardly\", \"weak\", \"villainous\", \"fearful\", \"monstrous\", \"unattractive\", \"unpleasant\", \"nasty\", \"beastly\", \"snide\",\n                \"horrible\", \"syncophantic\", \"unhelpful\", \"bootlicking\"];\n            return insulting;\n        case \"praise\":\n            var praise = [\"beautiful\", \"intelligent\", \"smart\", \"genius\", \"ingenious\", \"gorgeous\", \"pretty\", \"witty\", \"angelic\", \"handsome\", \"graceful\",\n                \"talented\", \"exquisite\", \"enchanting\", \"fascinating\", \"interesting\", \"divine\", \"alluring\", \"ravishing\", \"wonderful\", \"magnificient\", \"marvelous\",\n                \"dazzling\", \"cute\", \"charming\", \"attractive\", \"nifty\", \"delightful\", \"superior\", \"amiable\", \"gentle\", \"heroic\", \"courageous\", \"valiant\", \"brave\",\n                \"noble\", \"daring\", \"fearless\", \"gallant\", \"adventurous\", \"cool\", \"enthusiastic\", \"fierce\", \"awesome\", \"radical\", \"tubular\", \"fearsome\",\n                \"majestic\", \"grand\", \"stunning\"];\n            return praise;\n        case \"scientific\":\n            var scientific = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\n                \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\n                \"extinct\", \"galactic\"];\n            return scientific;\n        default:\n            var scientific_default = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\n                \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\n                \"extinct\", \"galactic\"];\n            return scientific_default;\n    }\n}\n\n// Pulls noun out of array using random number sent from generator\nfunction getNoun(y) {\n    switch (y) {\n        case \"animals\":\n            var animals = [\"flamingo\", \"hedgehog\", \"owl\", \"elephant\", \"pussycat\", \"alligator\", \"dachsund\", \"poodle\", \"beagle\", \"crocodile\", \"kangaroo\",\n                \"wallaby\", \"woodpecker\", \"eagle\", \"falcon\", \"canary\", \"parrot\", \"parakeet\", \"hamster\", \"gerbil\", \"squirrel\", \"rat\", \"dove\", \"toucan\",\n                \"raccoon\", \"vulture\", \"peacock\", \"goldfish\", \"rook\", \"koala\", \"skunk\", \"goat\", \"rooster\", \"fox\", \"porcupine\", \"llama\", \"grasshopper\",\n                \"gorilla\", \"monkey\", \"seahorse\", \"wombat\", \"wolf\", \"giraffe\", \"badger\", \"lion\", \"mouse\", \"beetle\", \"cricket\", \"nightingale\",\n                \"hawk\", \"trout\", \"squid\", \"octopus\", \"sloth\", \"snail\", \"locust\", \"baboon\", \"lemur\", \"meerkat\", \"oyster\", \"frog\", \"toad\", \"jellyfish\",\n                \"butterfly\", \"caterpillar\", \"tiger\", \"hyena\", \"zebra\", \"snail\", \"pig\", \"weasel\", \"donkey\", \"penguin\", \"crane\", \"buzzard\", \"vulture\",\n                \"rhino\", \"hippopotamus\", \"dolphin\", \"sparrow\", \"beaver\", \"moose\", \"minnow\", \"otter\", \"bat\", \"mongoose\", \"swan\", \"firefly\", \"platypus\"];\n            return animals;\n        case \"profession\":\n            var professions = [\"doctor\", \"lawyer\", \"ninja\", \"writer\", \"samurai\", \"surgeon\", \"clerk\", \"artist\", \"actor\", \"engineer\", \"mechanic\",\n                \"comedian\", \"fireman\", \"nurse\", \"RockStar\", \"musician\", \"carpenter\", \"plumber\", \"cashier\", \"electrician\", \"waiter\", \"president\", \"governor\",\n                \"senator\", \"scientist\", \"programmer\", \"singer\", \"dancer\", \"director\", \"mayor\", \"merchant\", \"detective\", \"investigator\", \"navigator\", \"pilot\",\n                \"priest\", \"cowboy\", \"stagehand\", \"soldier\", \"ambassador\", \"pirate\", \"miner\", \"police\"];\n            return professions;\n        case \"fantasy\":\n            var fantasy = [\"centaur\", \"wizard\", \"gnome\", \"orc\", \"troll\", \"sword\", \"fairy\", \"pegasus\", \"halfling\", \"elf\", \"changeling\", \"ghost\",\n                \"knight\", \"squire\", \"magician\", \"witch\", \"warlock\", \"unicorn\", \"dragon\", \"wyvern\", \"princess\", \"prince\", \"king\", \"queen\", \"jester\",\n                \"tower\", \"castle\", \"kraken\", \"seamonster\", \"mermaid\", \"psychic\", \"seer\", \"oracle\"];\n            return fantasy;\n        case \"music\":\n            var music = [\"violin\", \"flute\", \"bagpipe\", \"guitar\", \"symphony\", \"orchestra\", \"piano\", \"trombone\", \"tuba\", \"opera\", \"drums\",\n                \"harpsichord\", \"harp\", \"harmonica\", \"accordion\", \"tenor\", \"soprano\", \"baritone\", \"cello\", \"viola\", \"piccolo\", \"ukelele\", \"woodwind\", \"saxophone\",\n                \"bugle\", \"trumpet\", \"sousaphone\", \"cornet\", \"stradivarius\", \"marimbas\", \"bells\", \"timpani\", \"bongos\", \"clarinet\", \"recorder\", \"oboe\", \"conductor\",\n                \"singer\"];\n            return music;\n        case \"horror\":\n            var horror = [\"murderer\", \"chainsaw\", \"knife\", \"sword\", \"murder\", \"devil\", \"killer\", \"psycho\", \"ghost\", \"monster\", \"godzilla\", \"werewolf\",\n                \"vampire\", \"demon\", \"graveyard\", \"zombie\", \"mummy\", \"curse\", \"death\", \"grave\", \"tomb\", \"beast\", \"nightmare\", \"frankenstein\", \"specter\",\n                \"poltergeist\", \"wraith\", \"corpse\", \"scream\", \"massacre\", \"cannibal\", \"skull\", \"bones\", \"undertaker\", \"zombie\", \"creature\", \"mask\", \"psychopath\",\n                \"fiend\", \"satanist\", \"moon\", \"fullMoon\"];\n            return horror;\n        case \"gross\":\n            var gross = [\"slime\", \"bug\", \"roach\", \"fluid\", \"pus\", \"booger\", \"spit\", \"boil\", \"blister\", \"orifice\", \"secretion\", \"mucus\", \"phlegm\",\n                \"centipede\", \"beetle\", \"fart\", \"snot\", \"crevice\", \"flatulence\", \"juice\", \"mold\", \"mildew\", \"germs\", \"discharge\", \"toilet\", \"udder\", \"odor\", \"substance\",\n                \"fluid\", \"moisture\", \"garbage\", \"trash\", \"bug\"];\n            return gross;\n        case \"everyday\":\n            var everyday = [\"mirror\", \"knife\", \"fork\", \"spork\", \"spoon\", \"tupperware\", \"minivan\", \"suburb\", \"lamp\", \"desk\", \"stereo\", \"television\", \"TV\",\n                \"book\", \"car\", \"truck\", \"soda\", \"door\", \"video\", \"game\", \"computer\", \"calender\", \"tree\", \"plant\", \"flower\", \"chimney\", \"attic\", \"kitchen\",\n                \"garden\", \"school\", \"wallet\", \"bottle\"];\n            return everyday;\n        case \"jewelry\":\n            var jewelry = [\"earrings\", \"ring\", \"necklace\", \"pendant\", \"choker\", \"brooch\", \"bracelet\", \"cameo\", \"charm\", \"bauble\", \"trinket\", \"jewelry\",\n                \"anklet\", \"bangle\", \"locket\", \"finery\", \"crown\", \"tiara\", \"blingBling\", \"chain\", \"rosary\", \"jewel\", \"gemstone\", \"beads\", \"armband\", \"pin\",\n                \"costume\", \"ornament\", \"treasure\"];\n            return jewelry;\n        case \"places\":\n            var places = [\"swamp\", \"graveyard\", \"cemetery\", \"park\", \"building\", \"house\", \"river\", \"ocean\", \"sea\", \"field\", \"forest\", \"woods\", \"neighborhood\",\n                \"city\", \"town\", \"suburb\", \"country\", \"meadow\", \"cliffs\", \"lake\", \"stream\", \"creek\", \"school\", \"college\", \"university\", \"library\", \"bakery\",\n                \"shop\", \"store\", \"theater\", \"garden\", \"canyon\", \"highway\", \"restaurant\", \"cafe\", \"diner\", \"street\", \"road\", \"freeway\", \"alley\"];\n            return places;\n        case \"scifi\":\n            var scifi = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\n                \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\n                \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\n                \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\n            return scifi;\n        default:\n            var scifi_default = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\n                \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\n                \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\n                \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\n            return scifi_default;\n    }\n}\n\nvar adjectives = [\"dark\", \"color\", \"whimsical\", \"shiny\", \"noise\", \"apocalyptic\", \"insulting\", \"praise\", \"scientific\"];  // types of adjectives for pizza titles\nvar nouns = [\"animals\", \"everyday\", \"fantasy\", \"gross\", \"horror\", \"jewelry\", \"places\", \"scifi\"];                        // types of nouns for pizza titles\n\n// Generates random numbers for getAdj and getNoun functions and returns a new pizza name\nfunction generator(adj, noun) {\n    var adjectives = getAdj(adj);\n    var nouns = getNoun(noun);\n    var randomAdjective = parseInt(Math.random() * adjectives.length);\n    var randomNoun = parseInt(Math.random() * nouns.length);\n    var name = \"The \" + adjectives[randomAdjective].capitalize() + \" \" + nouns[randomNoun].capitalize();\n    return name;\n}\n\n// Chooses random adjective and random noun\nfunction randomName() {\n    var randomNumberAdj = parseInt(Math.random() * adjectives.length);\n    var randomNumberNoun = parseInt(Math.random() * nouns.length);\n    return generator(adjectives[randomNumberAdj], nouns[randomNumberNoun]);\n}\n\n// These functions return a string of a random ingredient from each respective category of ingredients.\nvar selectRandomMeat = function () {\n    var randomMeat = pizzaIngredients.meats[Math.floor((Math.random() * pizzaIngredients.meats.length))];\n    return randomMeat;\n};\n\nvar selectRandomNonMeat = function () {\n    var randomNonMeat = pizzaIngredients.nonMeats[Math.floor((Math.random() * pizzaIngredients.nonMeats.length))];\n    return randomNonMeat;\n};\n\nvar selectRandomCheese = function () {\n    var randomCheese = pizzaIngredients.cheeses[Math.floor((Math.random() * pizzaIngredients.cheeses.length))];\n    return randomCheese;\n};\n\nvar selectRandomSauce = function () {\n    var randomSauce = pizzaIngredients.sauces[Math.floor((Math.random() * pizzaIngredients.sauces.length))];\n    return randomSauce;\n};\n\nvar selectRandomCrust = function () {\n    var randomCrust = pizzaIngredients.crusts[Math.floor((Math.random() * pizzaIngredients.crusts.length))];\n    return randomCrust;\n};\n\nvar ingredientItemizer = function (string) {\n    return \"<li>\" + string + \"</li>\";\n};\n\n// Returns a string with random pizza ingredients nested inside <li> tags\nvar makeRandomPizza = function () {\n    var pizza = \"\";\n\n    var numberOfMeats = Math.floor((Math.random() * 4));\n    var numberOfNonMeats = Math.floor((Math.random() * 3));\n    var numberOfCheeses = Math.floor((Math.random() * 2));\n\n    for (var i = 0; i < numberOfMeats; i++) {\n        pizza = pizza + ingredientItemizer(selectRandomMeat());\n    }\n\n    for (var j = 0; j < numberOfNonMeats; j++) {\n        pizza = pizza + ingredientItemizer(selectRandomNonMeat());\n    }\n\n    for (var k = 0; k < numberOfCheeses; k++) {\n        pizza = pizza + ingredientItemizer(selectRandomCheese());\n    }\n\n    pizza = pizza + ingredientItemizer(selectRandomSauce());\n    pizza = pizza + ingredientItemizer(selectRandomCrust());\n\n    return pizza;\n};\n\n// returns a DOM element for each pizza\nvar pizzaElementGenerator = function (i) {\n    var pizzaContainer,             // contains pizza title, image and list of ingredients\n        pizzaImageContainer,        // contains the pizza image\n        pizzaImage,                 // the pizza image itself\n        pizzaDescriptionContainer,  // contains the pizza title and list of ingredients\n        pizzaName,                  // the pizza name itself\n        ul;                         // the list of ingredients\n\n    pizzaContainer = document.createElement(\"div\");\n    pizzaImageContainer = document.createElement(\"div\");\n    pizzaImage = document.createElement(\"img\");\n    pizzaDescriptionContainer = document.createElement(\"div\");\n\n    pizzaContainer.classList.add(\"randomPizzaContainer\");\n    pizzaContainer.style.width = \"33.33%\";\n    pizzaContainer.style.height = \"325px\";\n    pizzaContainer.id = \"pizza\" + i;                // gives each pizza element a unique id\n    pizzaImageContainer.classList.add(\"col-md-6\");\n\n    pizzaImage.src = \"images/pizza.png\";\n    pizzaImage.classList.add(\"img-responsive\");\n    pizzaImageContainer.appendChild(pizzaImage);\n    pizzaContainer.appendChild(pizzaImageContainer);\n\n\n    pizzaDescriptionContainer.classList.add(\"col-md-6\");\n\n    pizzaName = document.createElement(\"h4\");\n    pizzaName.innerHTML = randomName();\n    pizzaDescriptionContainer.appendChild(pizzaName);\n\n    ul = document.createElement(\"ul\");\n    ul.innerHTML = makeRandomPizza();\n    pizzaDescriptionContainer.appendChild(ul);\n    pizzaContainer.appendChild(pizzaDescriptionContainer);\n\n    return pizzaContainer;\n};\n\n// resizePizzas(size) is called when the slider in the \"Our Pizzas\" section of the website moves.\nvar resizePizzas = function (size) {\n    window.performance.mark(\"mark_start_resize\");   // User Timing API function\n    var pizzaSizeLabel = document.getElementById(\"pizzaSize\");\n\n    // Changes the value for the size of the pizza above the slider\n    function changeSliderLabel(size) {\n        switch (size) {\n            case \"1\":\n                pizzaSizeLabel.innerHTML = \"Small\";\n                return;\n            case \"2\":\n                pizzaSizeLabel.innerHTML = \"Medium\";\n                return;\n            case \"3\":\n                pizzaSizeLabel.innerHTML = \"Large\";\n                return;\n            default:\n                console.log(\"bug in changeSliderLabel\");\n        }\n    }\n\n    changeSliderLabel(size);\n\n    // Iterates through pizza elements on the page and changes their widths\n    function changePizzaSizes(size) {\n        // Inside the loop:\n        // * Avoid queries\n        // * Avoid the read of properties that will trigger relayouts\n        var pizzas = document.querySelectorAll(\".randomPizzaContainer\");\n        var container_width = document.querySelector(\"#randomPizzas\").offsetWidth;\n        var elem_new_width = container_width / (5 - size);\n        for (var i = 0; i < pizzas.length; i++) {\n            pizzas[i].style.width = elem_new_width + 'px';\n        }\n    }\n\n    changePizzaSizes(size);\n\n    // User Timing API is awesome\n    window.performance.mark(\"mark_end_resize\");\n    window.performance.measure(\"measure_pizza_resize\", \"mark_start_resize\", \"mark_end_resize\");\n    var timeToResize = window.performance.getEntriesByName(\"measure_pizza_resize\");\n    console.log(\"Time to resize pizzas: \" + timeToResize[timeToResize.length - 1].duration + \"ms\");\n};\n\nwindow.performance.mark(\"mark_start_generating\"); // collect timing data\n\n// This for-loop actually creates and appends all of the pizzas when the page loads\nfor (var i = 2; i < 100; i++) {\n    var pizzasDiv = document.getElementById(\"randomPizzas\");\n    pizzasDiv.appendChild(pizzaElementGenerator(i));\n}\n\n// User Timing API again. These measurements tell you how long it took to generate the initial pizzas\nwindow.performance.mark(\"mark_end_generating\");\nwindow.performance.measure(\"measure_pizza_generation\", \"mark_start_generating\", \"mark_end_generating\");\nvar timeToGenerate = window.performance.getEntriesByName(\"measure_pizza_generation\");\nconsole.log(\"Time to generate pizzas on load: \" + timeToGenerate[0].duration + \"ms\");\n\n// Iterator for number of times the pizzas in the background have scrolled.\n// Used by updatePositions() to decide when to log the average time per frame\nvar frame = 0;\n\n// Logs the average amount of time per 10 frames needed to move the sliding background pizzas on scroll.\nfunction logAverageFrame(times) {   // times is the array of User Timing measurements from updatePositions()\n    var numberOfEntries = times.length;\n    var sum = 0;\n    for (var i = numberOfEntries - 1; i > numberOfEntries - 11; i--) {\n        sum = sum + times[i].duration;\n    }\n    console.log(\"Average time to generate last 10 frames: \" + sum / 10 + \"ms\");\n}\n\n// The following code for sliding background pizzas was pulled from Ilya's demo found at:\n// https://www.igvita.com/slides/2012/devtools-tips-and-tricks/jank-demo.html\n\n// Moves the sliding background pizzas based on scroll position\nfunction updatePositions() {\n    frame++;\n    window.performance.mark(\"mark_start_frame\");\n\n    var items = document.querySelectorAll('.mover');\n    // Put the read of document.body.scrollTop outside of the loop.\n    // If it's on the loop the browser will need to trigger a relayout to know the actual value.\n    var $scroll_ratio = document.body.scrollTop / 1250;\n    for (var i = 0; i < items.length; i++) {\n        var phase = Math.sin($scroll_ratio + (i % 5));\n        items[i].style.left = items[i].basicLeft + 100 * phase + 'px';\n    }\n\n    // User Timing API to the rescue again. Seriously, it's worth learning.\n    // Super easy to create custom metrics.\n    window.performance.mark(\"mark_end_frame\");\n    window.performance.measure(\"measure_frame_duration\", \"mark_start_frame\", \"mark_end_frame\");\n    if (frame % 10 === 0) {\n        var timesToUpdatePosition = window.performance.getEntriesByName(\"measure_frame_duration\");\n        logAverageFrame(timesToUpdatePosition);\n    }\n}\n\n// _now: Grabbed from underscore.\n// A (possibly faster) way to get the current timestamp as an integer.\nvar _now = Date.now || function () {\n        return new Date().getTime();\n    };\n\n// _throttle: Grabbed from underscore.\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nvar _throttle = function (func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function () {\n        previous = options.leading === false ? 0 : _now();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n    };\n\n    var throttled = function () {\n        var now = _now();\n        if (!previous && options.leading === false) previous = now;\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n\n    throttled.cancel = function () {\n        clearTimeout(timeout);\n        previous = 0;\n        timeout = context = args = null;\n    };\n\n    return throttled;\n};\n\n// Throttleize updatePositions.\n// Scroll event fire so many times, someone has to do something !\nvar throttledUpdatePositions = _throttle(updatePositions, 50);\n\n// runs updatePositions on scroll\nwindow.addEventListener('scroll', throttledUpdatePositions);\n\n// Generates the sliding pizzas when the page loads.\ndocument.addEventListener('DOMContentLoaded', function () {\n    var cols = 8;\n    var s = 256;\n    for (var i = 0; i < 200; i++) {\n        var elem = document.createElement('img');\n        elem.className = 'mover';\n        elem.src = \"images/pizza.png\";\n        elem.style.height = \"100px\";\n        elem.style.width = \"73.333px\";\n        elem.basicLeft = (i % cols) * s;\n        elem.style.top = (Math.floor(i / cols) * s) + 'px';\n        document.querySelector(\"#movingPizzas1\").appendChild(elem);\n    }\n    updatePositions();\n});\n"],"sourceRoot":"/source/"}